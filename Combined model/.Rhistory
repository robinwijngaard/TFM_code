n <- nrow(FNsample)
sampleID <- rep(sample, n)
algorithmID <- rep(algorithm, n)
FNsample <- cbind(sampleID, algorithmID, FNsample)
FN_single <- rbind(FN_single, FNsample)
}
}
}
TP_clinic <- data.frame(matrix(ncol = 15, nrow = 0))
FP_clinic <- data.frame(matrix(ncol = 13, nrow = 0))
FN_clinic <- data.frame(matrix(ncol = 11, nrow = 0))
cnvFiles <- list.files(clinicDir, pattern = ".txt")
for (cnvFile in cnvFiles){
algorithm <- sub("cnvFounds_", "", cnvFile)
algorithm <- sub(".txt", "", algorithm)
# Import and adapt algorithm data (cnvFounds file)
algorithmData <- read.table(file.path(clinicDir, cnvFile), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
names(algorithmData) <- tolower(names(algorithmData))
names(algorithmData) <- sub("chromosome", "chr", names(algorithmData))
names(algorithmData) <- sub("cnv.type", "type", names(algorithmData))
colNames <- c("sample", "chr", "start", "end", "type")
algorithmData <- algorithmData[, colNames]
algorithmData$sample <- as.character(algorithmData$sample)
algorithmData$sample <- sub("X", "", algorithmData$sample)
# For all
samples <- unique(algorithmData$sample)
for (sample in samples){
s <- which(algorithmData$sample == sample)
sampleData <- algorithmData[s, ]
sampleData <- sampleData[, -1]
sampleBed <- file.path(tempDir, paste0(algorithm,"_", sample, ".bed"))
write.table(sampleData, sampleBed, sep="\t", row.names=FALSE, quote = FALSE, col.names = FALSE)
# Prepare sample bed file, filter by sample
clinicSample <- subset(clinicData, clinicData$V4 == sample)
clinicBed <- file.path(tempDir, "clinic.bed")
write.table(clinicSample, clinicBed, sep="\t", row.names=FALSE, quote = FALSE, col.names = FALSE)
clinicNormalsample <- subset(clinicNormal, clinicNormal$V4== sample)
clinicNormalbed <- file.path(tempDir, "clinicNormal.bed")
write.table(clinicNormalsample, clinicNormalbed, sep="\t", row.names=FALSE, quote = FALSE, col.names = FALSE)
# intersect
setwd(tempDir)
system(paste("bedtools intersect -wa -wb -a", sampleBed, "-b", clinicBed, "> TP.bed"))
system(paste("bedtools intersect -wa -wb -a", sampleBed, "-b", clinicNormalbed, "> FP.bed"))
system(paste("bedtools intersect -wa -wb -a", clinicBed, "-b", sampleBed, "-v > FN.bed"))
# read files
if (file.size("TP.bed") != 0) {TPsample <- read.table("TP.bed", sep = "\t", stringsAsFactors=FALSE)} else {TPsample <- NULL}
if (file.size("FP.bed") != 0) {FPsample <- read.table("FP.bed", sep = "\t", stringsAsFactors=FALSE)} else {FPsample <- NULL}
if (file.size("FN.bed") != 0) {FNsample <- read.table("FN.bed", sep = "\t", stringsAsFactors=FALSE)} else {FNsample <- NULL}
# Edit files
if(!is.null(TPsample)){
n <- nrow(TPsample)
sampleID <- rep(sample, n)
algorithmID <- rep(algorithm, n)
TPsample <- cbind(sampleID, algorithmID, TPsample)
TP_clinic <- rbind(TP_clinic, TPsample)
}
if(!is.null(FPsample)){
n <- nrow(FPsample)
sampleID <- rep(sample, n)
algorithmID <- rep(algorithm, n)
FPsample <- cbind(sampleID, algorithmID, FPsample)
FP_clinic <- rbind(FP_clinic, FPsample)
}
if(!is.null(FNsample)){
n <- nrow(FNsample)
sampleID <- rep(sample, n)
algorithmID <- rep(algorithm, n)
FNsample <- cbind(sampleID, algorithmID, FNsample)
FN_clinic <- rbind(FN_clinic, FNsample)
}
}
}
# Failed ROIs
## allDataset
csvFiles <- list.files(allDir, pattern = ".csv")
allFailed <- data.frame(matrix(ncol = 11, nrow = 0))
for (csvFile in csvFiles){
algorithm <- sub("failedROIs_", "", csvFile)
algorithm <- sub(".csv", "", algorithm)
# Import and adapt algorithm data (cnvFounds file)
algorithmData <- read.table(file.path(allDir, csvFile), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
algorithmData <- algorithmData[, c(2:5, 1)]
algorithmData$SampleID <- sub("X", "", algorithmData$SampleID)
samples <- sort(unique(algorithmData$SampleID))
for (sample in samples){
s <- which(algorithmData$SampleID == sample)
sampleData <- algorithmData[s, ]
sampleBed <- file.path(tempDir, paste0(algorithm,"_failed_", sample, ".bed"))
write.table(sampleData, sampleBed, sep="\t", row.names=FALSE, quote = FALSE, col.names = FALSE)
# Prepare sample bed file, filter by sample
alldsSample <- subset(allDatasetBed, allDatasetBed$V4 == sample)
alldsSampleBed <- file.path(tempDir, "allsample.bed")
write.table(alldsSample, alldsSampleBed, sep="\t", row.names=FALSE, quote = FALSE, col.names = FALSE)
# intersect
setwd(tempDir)
system(paste("bedtools intersect -wa -wb -a",sampleBed , "-b", alldsSampleBed, "> Failed_included.bed"))
# read files
if (file.size("Failed_included.bed") != 0) {FailedIncluded <- read.table("Failed_included.bed", sep = "\t", stringsAsFactors=FALSE)} else {FailedIncluded <- NULL}
# Edit files
if(!is.null(FailedIncluded)){
n <- nrow(FailedIncluded)
algorithmID <- rep(algorithm, n)
FailedAlgorithm <- cbind(algorithmID, FailedIncluded)
allFailed <- rbind(allFailed, FailedAlgorithm)
}
}
}
## singleDataset
csvFiles <- list.files(singleDir, pattern = ".csv")
singleFailed <- data.frame(matrix(ncol = 11, nrow = 0))
for (csvFile in csvFiles){
algorithm <- sub("failedROIs_", "", csvFile)
algorithm <- sub(".csv", "", algorithm)
# Import and adapt algorithm data (cnvFounds file)
algorithmData <- read.table(file.path(singleDir, csvFile), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
algorithmData <- algorithmData[, c(2:5, 1)]
algorithmData$SampleID <- sub("X", "", algorithmData$SampleID)
samples <- sort(unique(algorithmData$SampleID))
for (sample in samples){
s <- which(algorithmData$SampleID == sample)
sampleData <- algorithmData[s, ]
sampleBed <- file.path(tempDir, paste0(algorithm,"_failed_", sample, ".bed"))
write.table(sampleData, sampleBed, sep="\t", row.names=FALSE, quote = FALSE, col.names = FALSE)
# Prepare sample bed file, filter by sample
singledsSample <- subset(singleDatasetBed, singleDatasetBed$V4 == sample)
singledsSampleBed <- file.path(tempDir, "singlesample.bed")
write.table(singledsSample, singledsSampleBed, sep="\t", row.names=FALSE, quote = FALSE, col.names = FALSE)
# intersect
setwd(tempDir)
system(paste("bedtools intersect -wa -wb -a",sampleBed , "-b", singledsSampleBed, "> Failed_included.bed"))
# read files
if (file.size("Failed_included.bed") != 0) {FailedIncluded <- read.table("Failed_included.bed", sep = "\t", stringsAsFactors=FALSE)} else {FailedIncluded <- NULL}
# Edit files
if(!is.null(FailedIncluded)){
n <- nrow(FailedIncluded)
algorithmID <- rep(algorithm, n)
FailedAlgorithm <- cbind(algorithmID, FailedIncluded)
singleFailed <- rbind(singleFailed, FailedAlgorithm)
}
}
}
## Clinic
csvFiles <- list.files(clinicDir, pattern = ".csv")
clinicFailed <- data.frame(matrix(ncol = 11, nrow = 0))
for (csvFile in csvFiles){
algorithm <- sub("failedROIs_", "", csvFile)
algorithm <- sub(".csv", "", algorithm)
# Import and adapt algorithm data (cnvFounds file)
algorithmData <- read.table(file.path(clinicDir, csvFile), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
algorithmData <- algorithmData[, c(2:5, 1)]
algorithmData$SampleID <- sub("X", "", algorithmData$SampleID)
samples <- sort(unique(algorithmData$SampleID))
for (sample in samples){
s <- which(algorithmData$SampleID == sample)
sampleData <- algorithmData[s, ]
sampleBed <- file.path(tempDir, paste0(algorithm,"_failed_", sample, ".bed"))
write.table(sampleData, sampleBed, sep="\t", row.names=FALSE, quote = FALSE, col.names = FALSE)
# Prepare sample bed file, filter by sample
clinicdsSample <- subset(clinicDatasetBed, clinicDatasetBed$V4 == sample)
clinicdsSampleBed <- file.path(tempDir, "clinicsample.bed")
write.table(clinicdsSample, clinicdsSampleBed, sep="\t", row.names=FALSE, quote = FALSE, col.names = FALSE)
# intersect
setwd(tempDir)
system(paste("bedtools intersect -wa -wb -a",sampleBed , "-b", clinicdsSampleBed, "> Failed_included.bed"))
# read files
if (file.size("Failed_included.bed") != 0) {FailedIncluded <- read.table("Failed_included.bed", sep = "\t", stringsAsFactors=FALSE)} else {FailedIncluded <- NULL}
# Edit files
if(!is.null(FailedIncluded)){
n <- nrow(FailedIncluded)
algorithmID <- rep(algorithm, n)
FailedAlgorithm <- cbind(algorithmID, FailedIncluded)
clinicFailed <- rbind(clinicFailed, FailedAlgorithm)
}
}
}
# Compare del i dup
TP_all$V11 <- tolower(TP_all$V11)
TP_clinic$V11 <- tolower(TP_clinic$V11)
TP_single$V11 <- tolower(TP_single$V11)
a <- which(TP_all$V4 != TP_all$V11)
TP_all[a, ]
b <- which(TP_clinic$V4 != TP_clinic$V11)
TP_clinic[b, ]
c <- which(TP_single$V4 != TP_single$V11)
TP_single[c, ]
# FInal data frame
allData$cnvkit5 <- 0
allData$convading <- 0
allData$decon <- 0
allData$exomedepth <- 0
allData$manta <- 0
allData$panelcn <- 0
algorithms <- unique(TP_all$algorithmID)
for(i in 1:nrow(allData)){
for(j in algorithms){
a <- which(TP_all$algorithmID == j & TP_all$V13 == i)
if(length(a) > 0){
allData[i, j] <- 1
}
}
}
# FInal data frame Single
singleData$cnvkit5 <- 0
singleData$convading <- 0
singleData$decon <- 0
singleData$exomedepth <- 0
singleData$manta <- 0
singleData$panelcn <- 0
algorithms <- unique(TP_all$algorithmID)
for(i in 1:nrow(singleData)){
for(j in algorithms){
a <- which(TP_single$algorithmID == j & TP_single$V13 == i)
if(length(a) > 0){
singleData[i, j] <- 1
}
}
}
# FInal data frame clinic
clinicData$cnvkit5 <- 0
clinicData$convading <- 0
clinicData$decon <- 0
clinicData$exomedepth <- 0
clinicData$manta <- 0
clinicData$panelcn <- 0
algorithms <- unique(TP_all$algorithmID)
for(i in 1:nrow(clinicData)){
for(j in algorithms){
a <- which(TP_clinic$algorithmID == j & TP_clinic$V13 == i)
if(length(a) > 0){
clinicData[i, j] <- 1
}
}
}
resultDir <- file.path(analysisDir, "results")
write.table(allData, file.path(resultDir, "allData.txt"), sep="\t", row.names=FALSE, quote = FALSE, col.names = TRUE)
write.table(clinicData, file.path(resultDir, "clinicData.txt"), sep="\t", row.names=FALSE, quote = FALSE, col.names = TRUE)
write.table(singleData, file.path(resultDir, "singleData.txt"), sep="\t", row.names=FALSE, quote = FALSE, col.names = TRUE)
write.table(allNormal, file.path(resultDir, "allNormal.txt"), sep="\t", row.names=FALSE, quote = FALSE, col.names = TRUE)
write.table(clinicNormal, file.path(resultDir, "clinicNormal.txt"), sep="\t", row.names=FALSE, quote = FALSE, col.names = TRUE)
write.table(singleNormal, file.path(resultDir, "singleNormal.txt"), sep="\t", row.names=FALSE, quote = FALSE, col.names = TRUE)
# FInal data frame
allNormal$cnvkit5 <- 0
allNormal$convading <- 0
allNormal$decon <- 0
allNormal$exomedepth <- 0
allNormal$manta <- 0
allNormal$panelcn <- 0
algorithms <- unique(FP_all$algorithmID)
for(i in 1:nrow(allNormal)){
for(j in algorithms){
a <- which(FP_all$algorithmID == j & FP_all$V11 == i)
if(length(a) > 0){
allNormal[i, j] <- 1
}
}
}
# FInal data frame Single
singleNormal$cnvkit5 <- 0
singleNormal$convading <- 0
singleNormal$decon <- 0
singleNormal$exomedepth <- 0
singleNormal$manta <- 0
singleNormal$panelcn <- 0
algorithms <- unique(FP_single$algorithmID)
for(i in 1:nrow(singleNormal)){
for(j in algorithms){
a <- which(FP_single$algorithmID == j & FP_single$V11 == i)
if(length(a) > 0){
singleNormal[i, j] <- 1
}
}
}
# FInal data frame clinic
clinicNormal$cnvkit5 <- 0
clinicNormal$convading <- 0
clinicNormal$decon <- 0
clinicNormal$exomedepth <- 0
clinicNormal$manta <- 0
clinicNormal$panelcn <- 0
algorithms <- unique(FP_clinic$algorithmID)
for(i in 1:nrow(clinicNormal)){
for(j in algorithms){
a <- which(FP_clinic$algorithmID == j & FP_clinic$V11 == i)
if(length(a) > 0){
clinicNormal[i, j] <- 1
}
}
}
resultDir <- file.path(analysisDir, "results")
write.table(allNormal, file.path(resultDir, "allNormal.txt"), sep="\t", row.names=FALSE, quote = FALSE, col.names = TRUE)
write.table(clinicNormal, file.path(resultDir, "clinicNormal.txt"), sep="\t", row.names=FALSE, quote = FALSE, col.names = TRUE)
write.table(singleNormal, file.path(resultDir, "singleNormal.txt"), sep="\t", row.names=FALSE, quote = FALSE, col.names = TRUE)
allData <- read.table(file.path(resultDir, "allData.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
clinicData <- read.table(file.path(resultDir, "clinicData.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
singleData <-  read.table(file.path(resultDir, "singleData.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
allNormal <- read.table(file.path(resultDir, "allNormal.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
clinicNormal <- read.table(file.path(resultDir, "clinicNormal.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
singleNormal <-  read.table(file.path(resultDir, "singleNormal.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
analysisDir <- "/home/robin/Documents/Project/TFM_code/CNVbenchmarkeR-master/cnvfounds"
allDir <- file.path(analysisDir, "all")
singleDir <- file.path(analysisDir, "single")
clinicDir <- file.path(analysisDir, "clinic")
tempDir <- file.path(analysisDir, "temp")
resultDir <- file.path(analysisDir, "results")
hybridDir <- file.path(analysisDir, "hybrid")
allData <- read.table(file.path(resultDir, "allData.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
clinicData <- read.table(file.path(resultDir, "clinicData.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
singleData <-  read.table(file.path(resultDir, "singleData.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
allNormal <- read.table(file.path(resultDir, "allNormal.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
clinicNormal <- read.table(file.path(resultDir, "clinicNormal.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
singleNormal <-  read.table(file.path(resultDir, "singleNormal.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
View(allData)
View(allNormal)
View(allData)
View(allNormal)
View(allData)
All <- allData[, -c(6, 14)]
View(All)
All <- rbind(allData[, -c(6,8, 14)], setNames(allNormal, names(allData[-c(6, 8, 14)])))
allData <- read.table(file.path(resultDir, "allData.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
clinicData <- read.table(file.path(resultDir, "clinicData.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
singleData <-  read.table(file.path(resultDir, "singleData.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
allNormal <- read.table(file.path(resultDir, "allNormal.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
clinicNormal <- read.table(file.path(resultDir, "clinicNormal.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
singleNormal <-  read.table(file.path(resultDir, "singleNormal.txt"), sep = "\t", stringsAsFactors=FALSE, header = TRUE)
All <- rbind(allData[, -c(6,8, 14)], setNames(allNormal, names(allData[-c(6, 8, 14)])))
View(allNormal)
View(allData)
View(allNormal)
View(allData)
View(allNormal)
View(allNormal)
All <- rbind(allData[, -c(6,8, 14)], setNames(allNormal[, -12], names(allData[-c(6, 8, 14)])))
View(All)
View(allData)
View(allNormal)
All4 <- rbind(allData[, -c(6,8, 12, 14)], setNames(allNormal[, -c(10, 12)], names(allData[-c(6, 8,12, 14)])))
# VennDiagram
setwd(hybridDir)
library("VennDiagram")
View(All)
## TP
tp_venn <- allData[1:296, 7:12]
venn_list <- list()
View(tp_venn)
## TP
tp_venn <- All4[1:296, 7:12]
tp_venn$ID <- as.character(tp_venn$ID)
venn_list <- list()
for(i in 2:6){
algo <- names(tp_venn)[i]
tp_venn_algo <- tp_venn[, c(1, i)]
tp_venn_algo <- subset(tp_venn_algo, tp_venn_algo[,2] != 0)
venn_list[[algo]] <- tp_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_tp.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
## TP
tp_venn <- All4[1:296, 7:12]
tp_venn$ID <- as.character(tp_venn$ID)
venn_list <- list()
for(i in 2:6){
algo <- names(tp_venn)[i]
tp_venn_algo <- tp_venn[, c(1, i)]
tp_venn_algo <- subset(tp_venn_algo, tp_venn_algo[,2] != 0)
venn_list[[algo]] <- tp_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_tp.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
View(All4)
## TP
tp_venn <- All4[1:296, 7:13]
View(All4)
## TP
tp_venn <- All4[1:296, 7:11]
tp_venn$ID <- as.character(tp_venn$ID)
venn_list <- list()
for(i in 2:6){
algo <- names(tp_venn)[i]
tp_venn_algo <- tp_venn[, c(1, i)]
tp_venn_algo <- subset(tp_venn_algo, tp_venn_algo[,2] != 0)
venn_list[[algo]] <- tp_venn_algo[,1]
}
for(i in 2:5){
algo <- names(tp_venn)[i]
tp_venn_algo <- tp_venn[, c(1, i)]
tp_venn_algo <- subset(tp_venn_algo, tp_venn_algo[,2] != 0)
venn_list[[algo]] <- tp_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_tp.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
## TN
tn_venn <- All4[297:27347, 7:11]
tn_venn$ID <- as.character(tn_venn$ID)
venn_list <- list()
for(i in 2:5){
algo <- names(tn_venn)[i]
tn_venn_algo <- tn_venn[, c(1, i)]
tn_venn_algo <- subset(tn_venn_algo, tn_venn_algo[,2] == 0)
venn_list[[algo]] <- tn_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_tn.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
venn.diagram(venn_list, filename = "venn_tp.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
## TP
tp_venn <- All4[1:296, 7:11]
tp_venn$ID <- as.character(tp_venn$ID)
venn_list <- list()
for(i in 2:5){
algo <- names(tp_venn)[i]
tp_venn_algo <- tp_venn[, c(1, i)]
tp_venn_algo <- subset(tp_venn_algo, tp_venn_algo[,2] != 0)
venn_list[[algo]] <- tp_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_tp.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
## TN
tn_venn <- All4[297:27347, 7:11]
tn_venn$ID <- as.character(tn_venn$ID)
venn_list <- list()
for(i in 2:5){
algo <- names(tn_venn)[i]
tn_venn_algo <- tn_venn[, c(1, i)]
tn_venn_algo <- subset(tn_venn_algo, tn_venn_algo[,2] == 0)
venn_list[[algo]] <- tn_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_tn.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
fn_venn <- All4[297:27347, 7:11]
fn_venn$ID <- as.character(fn_venn$ID)
venn_list <- list()
for(i in 2:5){
algo <- names(fn_venn)[i]
fn_venn_algo <- fn_venn[, c(1, i)]
fn_venn_algo <- subset(fn_venn_algo, fn_venn_algo[,2] == 0)
venn_list[[algo]] <- fn_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_fn.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
## FP
fp_venn <- All4[1:296, 7:11]
fp_venn$ID <- as.character(fp_venn$ID)
venn_list <- list()
for(i in 2:5){
algo <- names(fp_venn)[i]
fp_venn_algo <- fp_venn[, c(1, i)]
fp_venn_algo <- subset(fp_venn_algo, fp_venn_algo[,2] != 0)
venn_list[[algo]] <- fp_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_fp.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
fn_venn <- All4[1:296, 7:11]
fn_venn$ID <- as.character(fn_venn$ID)
venn_list <- list()
for(i in 2:5){
algo <- names(fn_venn)[i]
fn_venn_algo <- fn_venn[, c(1, i)]
fn_venn_algo <- subset(fn_venn_algo, fn_venn_algo[,2] == 0)
venn_list[[algo]] <- fn_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_fn.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
## FP
fp_venn <- All4[297:27347, 7:11]
fp_venn$ID <- as.character(fp_venn$ID)
venn_list <- list()
for(i in 2:5){
algo <- names(fp_venn)[i]
fp_venn_algo <- fp_venn[, c(1, i)]
fp_venn_algo <- subset(fp_venn_algo, fp_venn_algo[,2] != 0)
venn_list[[algo]] <- fp_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_fp.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
Single4 <- rbind(singleData[, -c(6,8, 12, 14)], setNames(singleNormal[, -c(10, 12)], names(singleData[-c(6, 8,12, 14)])))
# VennDiagram
setwd(hybridDir)
library("VennDiagram")
## TP
tp_venn <- Single4[1:24, 7:11]
tp_venn$ID <- as.character(tp_venn$ID)
venn_list <- list()
for(i in 2:5){
algo <- names(tp_venn)[i]
tp_venn_algo <- tp_venn[, c(1, i)]
tp_venn_algo <- subset(tp_venn_algo, tp_venn_algo[,2] != 0)
venn_list[[algo]] <- tp_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_single_tp.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
## TN
tn_venn <- Single4[25:17119, 7:11]
tn_venn$ID <- as.character(tn_venn$ID)
venn_list <- list()
for(i in 2:5){
algo <- names(tn_venn)[i]
tn_venn_algo <- tn_venn[, c(1, i)]
tn_venn_algo <- subset(tn_venn_algo, tn_venn_algo[,2] == 0)
venn_list[[algo]] <- tn_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_single_tn.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
## FN
fn_venn <- Single4[1:24, 7:11]
fn_venn$ID <- as.character(fn_venn$ID)
venn_list <- list()
for(i in 2:5){
algo <- names(fn_venn)[i]
fn_venn_algo <- fn_venn[, c(1, i)]
fn_venn_algo <- subset(fn_venn_algo, fn_venn_algo[,2] == 0)
venn_list[[algo]] <- fn_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_single_fn.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
## FP
fp_venn <- Single4[25:17119, 7:11]
fp_venn$ID <- as.character(fp_venn$ID)
venn_list <- list()
for(i in 2:5){
algo <- names(fp_venn)[i]
fp_venn_algo <- fp_venn[, c(1, i)]
fp_venn_algo <- subset(fp_venn_algo, fp_venn_algo[,2] != 0)
venn_list[[algo]] <- fp_venn_algo[,1]
}
venn.diagram(venn_list, filename = "venn_single_fp.tiff", col = "black",fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),alpha = 0.50,cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3"),cat.cex = 1.5,cat.fontface = "bold",margin = 0.2)
