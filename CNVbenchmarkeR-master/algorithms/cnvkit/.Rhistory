print(paste("cnvkit for", name, "dataset finished", sep=" "))
outputFolder <- "/home/robin/Documents/Project/TFM_code/CNVbenchmarkeR-master/output/cnvkit2-datasetmanta"
# Export results
calls <- list.files(outputFolder, pattern = ".bintest.call.cns")
# Create main files
failedROIs <- data.frame(matrix(ncol = 5, nrow = 0))
colnames(failedROIs) <- c("SampleID", "Chr", "Start", "End", "Gene")
cnvFounds <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(cnvFounds) <- c("Sample","Gene", "Chr", "Start", "End", "log2", "CN", "CNV.type")
# Obtain failedcalls and cnv
for (call in calls){
sample <- sub(".bintest.call.cns", "", call)
callPath <- file.path(outputFolder, call)
callData <-  read.table(callPath, sep="\t", stringsAsFactors=FALSE, header = TRUE)
# delete normal (cn = 2)
cnvCall <- subset(callData, callData$cn != 2)
cnvCall$CNV.type <- lapply(cnvCall$cn, function(x) sapply(x, auxCNname))
#Add sampleID column
Sample <- rep(sample, nrow(cnvCall))
cnvCall <- cbind(Sample, cnvCall)
#Reorder and delete non-necessary colums
cnvCall <- cnvCall[, c(1, 5, 2, 3, 4, 6, 7, 11)]
colnames(cnvCall) <- c("Sample","Gene", "Chr", "Start", "End", "log2", "CN", "CNV.type")
cnvFounds <- rbind(cnvFounds, cnvCall)
#failed calls
failedFile <- paste0(sample, ".cnr")
failedPath <- file.path(outputFolder, failedFile)
failedData <-  read.table(callPath, sep="\t", stringsAsFactors=FALSE, header = TRUE)
failedcall <- failedData[, 1:4]
colnames(failedcall) <- c("Chr", "Start", "End", "Gene")
failedcall <- anti_join(bedData, failedcall, by=c("Chr", "Start", "End", "Gene"))
# Add sample ID column
SampleID <- rep(sample, nrow(failedcall))
failedcall <- cbind(SampleID, failedcall)
# Add to main file
failedROIs <- rbind(failedROIs, failedcall)
}
library("dplyr")
View(callData)
View(cnvFounds)
View(cnvFounds)
View(failedcall)
View(failedData)
View(failedROIs)
View(failedData)
outputFolder <- "/home/robin/Documents/Project/TFM_code/CNVbenchmarkeR-master/output/convading-datasetall"
# Export results
calls <- list.files(outputFolder, pattern = ".best.score.longlist.txt")
cnvFounds <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(cnvFounds) <- c("Sample","Gene", "Chr", "Start", "End", "CNV.type")
# Obtain failedcalls and cnv
for (call in calls){
sample <- sub(".best.score.longlist.txt", "", call)
callPath <- file.path(outputFolder, call)
callData <-  read.table(callPath, sep="\t", stringsAsFactors=FALSE, header = TRUE)
#Add sampleID column
Sample <- rep(sample, nrow(callData))
cnvCall <- cbind(Sample, callData)
#Reorder and delete non-necessary colums
cnvCall <- cnvCall[, c(1, 5, 2, 3, 4, 9)]
colnames(cnvCall) <- c("Sample","Gene", "Chr", "Start", "End","CNV.type")
cnvFounds <- rbind(cnvFounds, cnvCall)
}
View(cnvFounds)
write.table(cnvFounds, file.path(outputFolder, "cnvFounds.txt"), sep="\t", row.names=FALSE, quote = FALSE)
outputFolder <- "/home/robin/Documents/Project/TFM_code/CNVbenchmarkeR-master/output/convading-datasetclinic"
# Export results
calls <- list.files(outputFolder, pattern = ".best.score.longlist.txt")
cnvFounds <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(cnvFounds) <- c("Sample","Gene", "Chr", "Start", "End", "CNV.type")
# Obtain failedcalls and cnv
for (call in calls){
sample <- sub(".best.score.longlist.txt", "", call)
callPath <- file.path(outputFolder, call)
callData <-  read.table(callPath, sep="\t", stringsAsFactors=FALSE, header = TRUE)
#Add sampleID column
Sample <- rep(sample, nrow(callData))
cnvCall <- cbind(Sample, callData)
#Reorder and delete non-necessary colums
cnvCall <- cnvCall[, c(1, 5, 2, 3, 4, 9)]
colnames(cnvCall) <- c("Sample","Gene", "Chr", "Start", "End","CNV.type")
cnvFounds <- rbind(cnvFounds, cnvCall)
}
View(cnvFounds)
cnvFounds$CNV.type <- as.character(cnvFounds$CNV.type)
write.table(cnvFounds, file.path(outputFolder, "cnvFounds.txt"), sep="\t", row.names=FALSE, quote = FALSE)
outputFolder <- "/home/robin/Documents/Project/TFM_code/CNVbenchmarkeR-master/output/convading-datasetsingle"
# Export results
calls <- list.files(outputFolder, pattern = ".best.score.longlist.txt")
cnvFounds <- data.frame(matrix(ncol = 8, nrow = 0))
colnames(cnvFounds) <- c("Sample","Gene", "Chr", "Start", "End", "CNV.type")
# Obtain failedcalls and cnv
for (call in calls){
sample <- sub(".best.score.longlist.txt", "", call)
callPath <- file.path(outputFolder, call)
callData <-  read.table(callPath, sep="\t", stringsAsFactors=FALSE, header = TRUE)
#Add sampleID column
Sample <- rep(sample, nrow(callData))
cnvCall <- cbind(Sample, callData)
#Reorder and delete non-necessary colums
cnvCall <- cnvCall[, c(1, 5, 2, 3, 4, 9)]
colnames(cnvCall) <- c("Sample","Gene", "Chr", "Start", "End","CNV.type")
cnvFounds <- rbind(cnvFounds, cnvCall)
}
cnvFounds$CNV.type <- as.character(cnvFounds$CNV.type)
write.table(cnvFounds, file.path(outputFolder, "cnvFounds.txt"), sep="\t", row.names=FALSE, quote = FALSE)
